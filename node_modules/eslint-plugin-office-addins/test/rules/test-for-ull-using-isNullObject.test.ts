import { ESLintUtils } from '@typescript-eslint/experimental-utils'
import rule from '../../src/rules/test-for-null-using-isNullObject';

const ruleTester = new ESLintUtils.RuleTester({
  parser: '@typescript-eslint/parser',
});

ruleTester.run('test-for-null-using-isNullObject', rule, {
  valid: [ 
    {
      code: `var dataSheet = context.workbook.worksheets.getItemOrNullObject("Data");
        return context.sync()
          .then(function() {
            if(dataSheet.isNullObject) {
              dataSheed = context.workbook.worksheets.add('Data');
            }
            dataSheet.position = 1;
          })`,
    },
    {
      code: `var dataSheet;
        dataSheet = context.workbook.worksheets.getItemOrNullObject("Data");
        return context.sync()
          .then(function() {
            if(dataSheet.isNullObject) {
              dataSheed = context.workbook.worksheets.add('Data');
            }
            dataSheet.position = 1;
          })`,
    },
  ],
  invalid: [
    {
      code: `var dataSheet = context.workbook.worksheets.getItemOrNullObject("Data");
        return context.sync()
          .then(function() {
            if(true) {
              dataSheed = context.workbook.worksheets.add('Data');
            }
            dataSheet.position = 1;
          })`,
      errors: [{ messageId: "useIsNullObject" }]
    },
    {
      code: `var dataSheet;
        dataSheet = context.workbook.worksheets.getItemOrNullObject("Data");
        return context.sync()
          .then(function() {
            if(true) {
              dataSheed = context.workbook.worksheets.add('Data');
            }
            dataSheet.position = 1;
          })`,
      errors: [{ messageId: "useIsNullObject" }]
    },
  ]
});